@{
    ViewBag.Title = "Scan Tickets for " + ViewBag.EventTitle;
}

<section id="scan-tickets" class="pt-5 pb-5 bg-dark text-light">
    <div class="container">
        <h2 class="text-center mb-4">Scan Tickets for @ViewBag.EventTitle</h2>

        <div id="video-container" class="text-center">
            <video id="scanner" width="300" height="200" style="border:1px solid black;" class="mb-3"></video>
            <button id="start-scan" class="btn btn-primary">Start Scan</button>
        </div>

        <div id="scan-result" class="mt-4">
            <h4>Scan Result:</h4>
            <div id="result-text" class="bg-light text-dark p-3 rounded"></div> <!-- Apply similar styling for the result -->
        </div>
    </div>
</section>

@section Styles {
    <style>
        body {
            background-color: #2c3e50;
            color: #ecf0f1;
        }

        .btn-primary {
            background-color: #007bff;
            border-color: #007bff;
        }

        .container {
            color: #fff;
        }

        video {
            border-radius: 10px;
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
        }

        .text-light {
            color: #ecf0f1;
        }

        #result-text {
            background-color: #fff;
            color: #333;
            border: 1px solid #ccc;
        }
    </style>
}

<script src="https://cdn.jsdelivr.net/npm/jsqr@1.4.0/dist/jsQR.min.js"></script>
<script type="text/javascript">
    document.getElementById('start-scan').addEventListener('click', function() {
        let video = document.getElementById('scanner');
        let canvasElement = document.createElement('canvas');
        let canvas = canvasElement.getContext('2d');
        let scanning = true;
        let eventId = @ViewBag.EventId;

        navigator.mediaDevices.getUserMedia({ video: { facingMode: 'environment' } }).then(function(stream) {
            video.srcObject = stream;
            video.setAttribute('playsinline', true); // required to tell iOS safari we don't want fullscreen
            video.play();

            requestAnimationFrame(tick);
        });

        function tick() {
            if (!scanning) return; // Exit if scanning is stopped

            if (video.readyState === video.HAVE_ENOUGH_DATA) {
                canvasElement.height = video.videoHeight;
                canvasElement.width = video.videoWidth;
                canvas.drawImage(video, 0, 0, canvasElement.width, canvasElement.height);

                let imageData = canvas.getImageData(0, 0, canvasElement.width, canvasElement.height);
                let code = jsQR(imageData.data, imageData.width, imageData.height, {
                    inversionAttempts: "dontInvert",
                });

                console.log("QR Code Data:", code ? code.data : "No QR Code detected");

                if (code) {
                    document.getElementById('result-text').innerHTML = "<h3>Processing...</h3>";
                    scanning = false; // Stop further scanning while processing
                    video.pause(); // Stop video stream after a successful scan

                    // Send the QR data to the server along with the eventId
                    $.ajax({
                        url: '@Url.Action("ProcessQRCode", "Attendance")',
                        type: 'POST',
                        data: { qrCodeData: code.data, eventId: eventId },
                        dataType: 'json',  // Expecting a JSON response
                        success: function(response) {
                            console.log("Server Response:", response);
                            displayResult(response);
                        },
                        error: function(xhr, status, error) {
                            console.log("Error: " + error);
                            document.getElementById('result-text').innerHTML = "<h3>Error processing QR code.</h3>";
                        },
                        complete: function() {
                            // After a 5-second delay, reload the page to restart the scan
                            setTimeout(function() {
                                location.reload();
                            }, 5000);
                        }
                    });
                }
            }
            requestAnimationFrame(tick);
        }

        // Disable the Start Scan button to prevent multiple scans at once
        document.getElementById('start-scan').disabled = true;
    });

    function displayResult(response) {
        let resultHtml = `<h1>${response.message}</h1>`; // Display the main message in large text

        // Check if there are additional details
        if (response.details) {
            resultHtml += `<p><strong>Name:</strong> ${response.details.InviteeName}</p>`;
            resultHtml += `<p><strong>Category:</strong> ${response.details.Category}</p>`;
            resultHtml += `<p><strong>Admission for:</strong> ${response.details.Quantity}</p>`;
            resultHtml += `<p><strong>Checked In At:</strong> ${response.details.CheckedInTime}</p>`;
        }

        document.getElementById('result-text').innerHTML = resultHtml;
    }
</script>
