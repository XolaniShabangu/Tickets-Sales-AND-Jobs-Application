@model TheBookBuffetSem2.Models.Event

@{
    ViewBag.Title = "Edit Event";
}

<section id="edit-event" class="pt-5 pb-5 bg-dark text-light">
    <div class="container">
        <h2 class="text-center mb-4">Edit Event</h2>

        @using (Html.BeginForm("Edit", "Event", FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
        {
            @Html.AntiForgeryToken()

            @Html.HiddenFor(model => model.EventId)

            <!-- Venue Information at the Top -->
            <hr />

            if (ViewBag.CurrentVenue != null)
            {
                <h4>Current Venue: @ViewBag.CurrentVenue.Name</h4>
                <p><strong>Location:</strong> @ViewBag.CurrentVenue.Location</p>
                <p><strong>Capacity:</strong> @ViewBag.CurrentVenue.Capacity</p>
                <img src="@Url.Content(ViewBag.CurrentVenue.Photos)" class="img-fluid" alt="Venue Image" style="max-width: 300px;" />
            }
            else
            {
                <p>No venue selected yet.</p>
            }

            <div class="form-group">
                <a href="@Url.Action("SelectVenue", "Venue", new { eventId = Model.EventId, returnUrl = Url.Action("Edit", "Event", new { id = Model.EventId }) })" class="btn btn-secondary">Change Venue</a>
            </div>

            <!-- Event Details -->
            <div class="form-group">
                @Html.LabelFor(model => model.Objectives, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.TextBoxFor(model => model.Objectives, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.Objectives, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Author, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.TextBoxFor(model => model.Author, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.Author, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.BookTitle, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.TextBoxFor(model => model.BookTitle, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.BookTitle, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.LaunchDate, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.TextBoxFor(model => model.LaunchDate, new { @class = "form-control", type = "datetime-local", value = Model.LaunchDate.ToString("yyyy-MM-ddTHH:mm") })
                    @Html.ValidationMessageFor(model => model.LaunchDate, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Budget, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.TextBoxFor(model => model.Budget, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.Budget, "", new { @class = "text-danger" })
                </div>
            </div>

            <!-- Save Changes at the Bottom -->
            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Save Changes" class="btn btn-primary" />
                </div>
            </div>
        }
    </div>
</section>

@section Styles {
    <style>
        body {
            background-color: #2c3e50;
            color: #ecf0f1;
        }

        .card {
            border: none;
            border-radius: 10px;
            overflow: hidden;
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
            color: #333; /* Darker text color for readability */
            position: relative;
        }

        .card-title, .card-text, .list-group-item {
            color: #333; /* Set a dark color for text */
        }

        .card-img-top {
            height: 200px;
            object-fit: cover;
        }

        .list-group-item {
            background-color: transparent;
            color: #333; /* Set a dark color for text */
        }

        .btn-primary {
            background-color: #007bff;
            border-color: #007bff;
        }

        .btn-success {
            background-color: #28a745;
            border-color: #28a745;
        }

        .badge-pill {
            background-color: #f8f9fa; /* Light background for the badge */
            color: #333; /* Dark text color for the price */
            font-weight: bold; /* Make the price text bold */
        }

        /* Sold Out banner styles */
        .sold-out-banner {
            position: absolute;
            top: 20px;
            left: -40px;
            background-color: red;
            color: white;
            padding: 10px 40px;
            transform: rotate(-45deg);
            font-size: 20px;
            font-weight: bold;
            z-index: 10;
            opacity: 0.8;
        }
    </style>
}

@section Scripts {
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.6.0/jquery.min.js"></script>
    <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.bundle.min.js"></script>
}
