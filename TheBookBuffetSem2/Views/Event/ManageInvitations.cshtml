@model IEnumerable<TheBookBuffetSem2.Models.ManageInvitationsViewModel>

<section id="manage-invitations" class="pt-5 pb-5 bg-dark text-light">
    <div class="container">
        <h2 class="text-center mb-4">Manage Invitations</h2>

        <!-- Search Form -->
        <form method="get" action="@Url.Action("ManageInvitations")" class="mb-4">
            <div class="form-group">
                <label for="searchEventTitle" class="text-light">Search by Event Title:</label>
                <input type="text" id="searchEventTitle" name="searchEventTitle" class="form-control bg-dark text-light border-secondary" value="@Request.QueryString["searchEventTitle"]" />
                <button type="submit" class="btn btn-primary mt-2">Search</button>
            </div>
        </form>

        @foreach (var group in Model)
        {
            <div class="event-group mb-4">
                <h3 class="text-warning">@group.EventTitle (@group.EventDate.ToString("MMMM dd, yyyy"))</h3> <!-- Display event title with date -->

                <table class="table table-striped table-dark">
                    <thead>
                        <tr>
                            <th>Invitee</th>
                            <th>Email</th>
                            <th>Invitee Type</th>
                            <th>RSVP Status</th>
                            <th>Willing to Speak</th>
                        </tr>
                    </thead>
                    <tbody>
                        <!-- Authors Section -->
                        @foreach (var invite in group.Invitations.Where(i => i.InviteeType == "Author"))
                        {
                            <tr>
                                <td>@invite.InviteeName</td>
                                <td>@invite.Email</td>
                                <td>@invite.InviteeType</td>
                                <td>@(invite.RSVPStatus.HasValue ? (invite.RSVPStatus.Value ? "Attending" : "Not Attending") : "No Response")</td>
                                <td>@(invite.WillingToSpeak.HasValue ? (invite.WillingToSpeak.Value ? "Yes" : "No") : "No Response")</td>
                            </tr>
                        }

                        <!-- Divider between Authors and Media -->
                        <tr>
                            <td colspan="5">
                                <hr class="bg-secondary" /> <!-- A bold divider line -->
                            </td>
                        </tr>

                        <!-- Media Section -->
                        @foreach (var invite in group.Invitations.Where(i => i.InviteeType == "Media"))
                        {
                            <tr>
                                <td>@invite.InviteeName</td>
                                <td>@invite.Email</td>
                                <td>@invite.InviteeType</td>
                                <td>@(invite.RSVPStatus.HasValue ? (invite.RSVPStatus.Value ? "Attending" : "Not Attending") : "No Response")</td>
                                <td>—</td> <!-- Empty cell for "Willing to Speak" -->
                            </tr>
                        }
                    </tbody>
                </table>

                <a href="@Url.Action("InviteGuests", new { id = group.Invitations.FirstOrDefault()?.EventID })" class="btn btn-primary mt-3">Add More Invitations</a>
            </div>
            <hr class="bg-secondary" />
        }
    </div>
</section>

@section Styles {
    <style>
        body {
            background-color: #2c3e50;
            color: #ecf0f1;
        }

        .form-control {
            background-color: #343a40;
            color: #ecf0f1;
            border: 1px solid #495057;
            border-radius: 5px;
            padding: 10px;
            font-size: 16px;
        }

        .btn-primary {
            background-color: #007bff;
            border-color: #007bff;
        }

        .container {
            max-width: 900px;
            margin: auto;
        }

        .table-dark {
            background-color: #343a40;
        }

            .table-dark thead th {
                color: #f8f9fa;
            }

            .table-dark tbody td {
                color: #f8f9fa;
            }

        .bg-secondary {
            border-color: #6c757d;
            border-width: 2px;
        }

        .event-group {
            padding: 15px;
            border-radius: 5px;
            background-color: #2c3e50;
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
        }
    </style>
}

@section Scripts {
    <script>
        // Function to clear the success message after 5 seconds
        setTimeout(function () {
            var successMessage = document.getElementById("success-message");
            if (successMessage) {
                successMessage.style.display = "none";
                successMessage.style.transition = "opacity 1s";
                successMessage.style.opacity = "0";
            }
        }, 5000); // 5000 milliseconds = 5 seconds
    </script>
}
